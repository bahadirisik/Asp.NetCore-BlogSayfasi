#pragma checksum "D:\Asp.Net Tutos\Asp.net Core Demo\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d3104fd1e59d1fd7b1cec53a530b2ff883b6236a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d3104fd1e59d1fd7b1cec53a530b2ff883b6236a", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Asp.Net Tutos\Asp.net Core Demo\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Yazar Ajax İşlemleri</h1>
<br />
<button type=""button"" id=""btnGetList"" class=""btn btn-outline-primary""> Yazar Listesi</button>
<button type=""button"" id=""btnGetById"" class=""btn btn-outline-success""> Yazar Getir</button>
<button type=""button"" id=""btnAddWriter"" class=""btn btn-outline-info""> Yazar Ekle</button>
<button type=""button"" id=""btnDeleteWriter"" class=""btn btn-outline-danger""> Yazar Sil</button>
<button type=""button"" id=""btnUpdateWriter"" class=""btn btn-outline-warning""> Yazar Güncelle</button>
<br />
<br />
<div id=""WriterList"">
    Buraya yazarlar gelecek
</div>
<br />
<div id=""WriterGet"">
    Buraya 1 yazar gelecek
</div>
<br />
<div>
    <input type=""text"" id=""writerId"" placeholder=""Yazar ID Gir..."" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" class=""form-control"" id=""txtWriterId"" placeholder=""Yazar Id"" />
    <input type=""text"" class=""form-control"" id=""txtWriterName"" placeholder=""Yazar Adı"" />
</div>
<br />
<div>
    <input type=""text"" id=""writerD");
            WriteLiteral(@"eleteId"" placeholder=""Silinecek Yazar ID Gir..."" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" id=""writerUpdateId"" placeholder=""Güncellenecek Yazar ID Gir..."" class=""form-control"" />
    <input type=""text"" id=""writerUpdateName"" placeholder=""Güncellenecek Yazar İsim Gir..."" class=""form-control"" />
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@" 
    <script>
        $(""#btnGetList"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""GET"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(w);
                    let tableHtml = ""<table class=table table-bordered> <tr><th>Yazar ID</th> <th>Yazar Adı</th> </tr>"";

                    $.each(w, (index, value) => {
                        tableHtml += `<tr> <td> ${value.ID} </td> <td> ${value.Name} </td> </tr>`
                    });

                    tableHtml += ""</table>"";

                    $(""#WriterList"").html(tableHtml);
                }
            });
        });

        $(""#btnGetById"").click(x => {
            let id = $(""#writerId"").val();

            $.ajax({
                contentType: ""application/json"",
                dataType: """);
                WriteLiteral(@"json"",
                type: ""GET"",
                url: ""/Admin/Writer/GetWriterById/"",
                data: {writerId : id},

                success: function (func) {
                    let w = jQuery.parseJSON(func);

                    let getvalue = `<table class=table table-bordered> <tr> <th> Yazar ID </th> <th> Yazar Adı </th> </tr> 
                        <tr> <td> ${w.ID} </td> <td> ${w.Name} </td> </tr> </table>`;
                    $(""#WriterGet"").html(getvalue);
                }
            });
        });

        $(""#btnAddWriter"").click(function () {
            let w = {
                ID: $(""#txtWriterId"").val(),
                Name: $(""#txtWriterName"").val()
            };

            $.ajax({
                type: ""POST"",
                url: ""/Admin/Writer/AddWriter/"",
                data: w,
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                    alert(""Yazar Ekleme İşlemi Başarılı"");
");
                WriteLiteral(@"                }
            });
        });

        $(""#btnDeleteWriter"").click(x => {
            let id = $(""#writerDeleteId"").val();

            $.ajax({
                type: ""POST"",
                url: ""/Admin/Writer/DeleteWriter/"" + id,
                dataType: ""json"",
                success: function (func) {
                    alert(""Yazar Silme İşlemi Başarılı"");
                }
            });
        });

        $(""#btnUpdateWriter"").click(function () {
            let wrt = {
                ID: $(""#writerUpdateId"").val(),
                Name: $(""#writerUpdateName"").val()
            };

            $.ajax({
                type: ""POST"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data: wrt,

                success: function (func) {
                    alert(""Güncelleme Başarılı"");
                }
            });
        });
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
